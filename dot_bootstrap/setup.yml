- name: Configure tools for general environment
  hosts: localhost
  become: true
  connection: local
  gather_facts: true

  tasks:

    - name: Update and upgrade
      pacman:
        update_cache: true
        upgrade: true
      when: ansible_facts["distribution"] == "Archlinux"

    - name: Install command line utilities
      pacman:
        name: [
          "git", "git-delta", "make", "tmux", "base-devel", "unzip", "zip",
          "ripgrep", "zoxide", "bat", "jq", "fzf", "btop", "tree", "github-cli",
          "tmux", "pass", "neovim", "starship"
        ]
      when: ansible_facts["distribution"] == "Archlinux"

    - name: Install nvidia drivers
      pacman:
        name: [
          "nvidia"
        ]
      when: ansible_facts["distribution"] == "Archlinux"

    - name: Install x11 dependencies
      pacman:
        name: [
          "xorg", "xorg-xinit", "xclip", "xorg-fonts", "pango"
        ]
      when: ansible_facts["distribution"] == "Archlinux"

    - name: Install Fonts
      pacman: 
        name: [
          "noto-fonts-emoji", "nerd-fonts", "monaspace-font", "fontconfig"
        ]
      when: ansible_facts["distribution"] == "Archlinux"

    - name: Install WM
      pacman:
        name: [
          "awesome", "picom", "feh", "polybar"
        ]
      when: ansible_facts["distribution"] == "Archlinux"

    - name: Images
      pacman:
        name: [
          "sxiv", "zathura", "zathura-pdf-mupdf", "zathura-djvu",
          "zathura-ps", "mpv", "inkscape"
        ]
      when: ansible_facts["distribution"] == "Archlinux"

    - name: Programming languages support
      pacman:
        name: [
          "clang", "pyenv", "lua-language-server"
        ]
      when: ansible_facts["distribution"] == "Archlinux"

    - name: Create the `aur_builder` user
      become: yes
      ansible.builtin.user:
        name: aur_builder
        create_home: yes
        group: wheel
      when: ansible_facts["distribution"] == "Archlinux"

    - name: Allow the `aur_builder` user to run `sudo pacman` without a password
      become: yes
      ansible.builtin.lineinfile:
        path: /etc/sudoers.d/11-install-aur_builder
        line: 'aur_builder ALL=(ALL) NOPASSWD: /usr/bin/pacman'
        create: yes
        mode: 0644
        validate: 'visudo -cf %s'
      when: ansible_facts["distribution"] == "Archlinux"

    - name: AUR packages
      become: yes
      become_user: aur_builder
      kewlfft.aur.aur:
        name: ["google-chrome"]
        use: paru
      when: ansible_facts["distribution"] == "Archlinux"
